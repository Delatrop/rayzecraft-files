Write-Host "=== TESTE DE ATUALIZA√á√ÉO - DIAGN√ìSTICO DE ERRO ===" -ForegroundColor Green
Write-Host ""

# Verificar se o launcher est√° executando
$launcher = Get-Process -Name "MinecraftLauncher" -ErrorAction SilentlyContinue
if ($launcher) {
    Write-Host "‚úÖ Launcher executando (PID: $($launcher.Id))" -ForegroundColor Green
} else {
    Write-Host "‚ùå Launcher n√£o est√° executando" -ForegroundColor Red
}

Write-Host ""
Write-Host "üìã Logs dispon√≠veis:" -ForegroundColor Yellow
Get-ChildItem -Path "$env:APPDATA\.rayzecraftlauncher\" -Filter "*.log" | Sort-Object LastWriteTime -Descending | Select-Object -First 5 | Format-Table Name, LastWriteTime, Length

Write-Host ""
Write-Host "üìã Logs em /logs/:" -ForegroundColor Yellow
Get-ChildItem -Path "$env:APPDATA\.rayzecraftlauncher\logs\" -Filter "*.log" | Sort-Object LastWriteTime -Descending | Select-Object -First 3 | Format-Table Name, LastWriteTime, Length

Write-Host ""
Write-Host "üîç Verificando √∫ltimas 20 linhas dos logs:" -ForegroundColor Yellow
$logFile = Get-ChildItem -Path "$env:APPDATA\.rayzecraftlauncher\logs\" -Filter "*.log" | Sort-Object LastWriteTime -Descending | Select-Object -First 1
if ($logFile) {
    Write-Host "Log mais recente: $($logFile.Name)" -ForegroundColor Cyan
    Get-Content $logFile.FullName | Select-Object -Last 20
} else {
    Write-Host "‚ùå Nenhum log encontrado" -ForegroundColor Red
}

Write-Host ""
Write-Host "üí° Para testar a atualiza√ß√£o:" -ForegroundColor Yellow
Write-Host "1. Abra o launcher"
Write-Host "2. Clique em 'Atualizar'"
Write-Host "3. Observe qual erro aparece"
Write-Host "4. Me informe o erro espec√≠fico"

Write-Host ""
Write-Host "üîß Verificando configura√ß√£o atual:" -ForegroundColor Yellow
$configFile = "$env:APPDATA\.rayzecraftlauncher\config.json"
if (Test-Path $configFile) {
    Write-Host "‚úÖ Arquivo de configura√ß√£o encontrado" -ForegroundColor Green
    $config = Get-Content $configFile | ConvertFrom-Json
    Write-Host "Jogador: $($config.PlayerName)"
    Write-Host "Mem√≥ria: $($config.MaxMemory)MB"
    Write-Host "Java: $($config.JavaPath)"
} else {
    Write-Host "‚ùå Arquivo de configura√ß√£o n√£o encontrado" -ForegroundColor Red
}

Write-Host ""
Write-Host "=== TESTE CONCLUIDO ===" -ForegroundColor Green
